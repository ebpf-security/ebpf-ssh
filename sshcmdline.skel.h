/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __SSHCMDLINE_BPF_SKEL_H__
#define __SSHCMDLINE_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct sshcmdline_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *events;
		struct bpf_map *rodata_str1_1;
	} maps;
	struct {
		struct bpf_program *printret;
	} progs;
	struct {
		struct bpf_link *printret;
	} links;

#ifdef __cplusplus
	static inline struct sshcmdline_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct sshcmdline_bpf *open_and_load();
	static inline int load(struct sshcmdline_bpf *skel);
	static inline int attach(struct sshcmdline_bpf *skel);
	static inline void detach(struct sshcmdline_bpf *skel);
	static inline void destroy(struct sshcmdline_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
sshcmdline_bpf__destroy(struct sshcmdline_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
sshcmdline_bpf__create_skeleton(struct sshcmdline_bpf *obj);

static inline struct sshcmdline_bpf *
sshcmdline_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct sshcmdline_bpf *obj;
	int err;

	obj = (struct sshcmdline_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = sshcmdline_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	sshcmdline_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct sshcmdline_bpf *
sshcmdline_bpf__open(void)
{
	return sshcmdline_bpf__open_opts(NULL);
}

static inline int
sshcmdline_bpf__load(struct sshcmdline_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct sshcmdline_bpf *
sshcmdline_bpf__open_and_load(void)
{
	struct sshcmdline_bpf *obj;
	int err;

	obj = sshcmdline_bpf__open();
	if (!obj)
		return NULL;
	err = sshcmdline_bpf__load(obj);
	if (err) {
		sshcmdline_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
sshcmdline_bpf__attach(struct sshcmdline_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
sshcmdline_bpf__detach(struct sshcmdline_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *sshcmdline_bpf__elf_bytes(size_t *sz);

static inline int
sshcmdline_bpf__create_skeleton(struct sshcmdline_bpf *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "sshcmdline_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "events";
	s->maps[0].map = &obj->maps.events;

	s->maps[1].name = ".rodata.str1.1";
	s->maps[1].map = &obj->maps.rodata_str1_1;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "printret";
	s->progs[0].prog = &obj->progs.printret;
	s->progs[0].link = &obj->links.printret;

	s->data = (void *)sshcmdline_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *sshcmdline_bpf__elf_bytes(size_t *sz)
{
	*sz = 6456;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xb8\x16\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x0a\0\
\x01\0\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x75\x72\
\x65\x74\x70\x72\x6f\x62\x65\x2f\x2f\x62\x69\x6e\x2f\x62\x61\x73\x68\x3a\x72\
\x65\x61\x64\x6c\x69\x6e\x65\0\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x6d\x61\x70\
\x73\0\x2e\x72\x6f\x64\x61\x74\x61\x2e\x73\x74\x72\x31\x2e\x31\0\x73\x73\x68\
\x63\x6d\x64\x6c\x69\x6e\x65\x2e\x62\x70\x66\x2e\x63\0\x4c\x42\x42\x30\x5f\x32\
\0\x70\x72\x69\x6e\x74\x72\x65\x74\0\x65\x76\x65\x6e\x74\x73\0\x4c\x49\x43\x45\
\x4e\x53\x45\0\x2e\x72\x65\x6c\x75\x72\x65\x74\x70\x72\x6f\x62\x65\x2f\x2f\x62\
\x69\x6e\x2f\x62\x61\x73\x68\x3a\x72\x65\x61\x64\x6c\x69\x6e\x65\0\x2e\x42\x54\
\x46\0\x2e\x42\x54\x46\x2e\x65\x78\x74\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x4b\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x5c\0\0\0\0\0\x03\0\x50\
\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x63\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\x60\x0d\
\0\0\0\0\0\0\x6c\0\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\x73\0\0\0\
\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x79\x16\x50\0\0\0\0\0\x15\x06\
\xa8\x01\0\0\0\0\xbf\xa8\0\0\0\0\0\0\x07\x08\0\0\xa0\xff\xff\xff\x7b\x1a\xa8\
\xfe\0\0\0\0\xbf\x81\0\0\0\0\0\0\xb7\x02\0\0\x10\0\0\0\x85\0\0\0\x10\0\0\0\x85\
\0\0\0\x0e\0\0\0\xbf\x07\0\0\0\0\0\0\xbf\xa9\0\0\0\0\0\0\x07\x09\0\0\xb0\xff\
\xff\xff\xbf\x91\0\0\0\0\0\0\xb7\x02\0\0\x50\0\0\0\xbf\x63\0\0\0\0\0\0\x85\0\0\
\0\x72\0\0\0\xb7\x01\0\0\x20\0\0\0\x6b\x1a\x34\xff\0\0\0\0\xb7\x01\0\0\x3a\x20\
\x25\x73\x63\x1a\x30\xff\0\0\0\0\x18\x01\0\0\x25\x73\x29\x20\0\0\0\0\x72\x65\
\x61\x64\x7b\x1a\x28\xff\0\0\0\0\x18\x01\0\0\x50\x49\x44\x20\0\0\0\0\x25\x64\
\x20\x28\x7b\x1a\x20\xff\0\0\0\0\x77\x07\0\0\x20\0\0\0\x7b\x7a\xa0\xfe\0\0\0\0\
\xbf\xa1\0\0\0\0\0\0\x07\x01\0\0\x20\xff\xff\xff\xb7\x02\0\0\x16\0\0\0\xbf\x73\
\0\0\0\0\0\0\xbf\x84\0\0\0\0\0\0\xbf\x95\0\0\0\0\0\0\x85\0\0\0\x06\0\0\0\x71\
\xa2\xc7\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xc6\xff\0\0\0\0\x4f\x12\0\0\
\0\0\0\0\x7b\x2a\xf8\xfe\0\0\0\0\x71\xa2\xa7\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\
\x71\xa1\xa6\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x18\xff\0\0\0\0\x71\xa2\
\xf7\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xf6\xff\0\0\0\0\x4f\x12\0\0\0\0\
\0\0\x7b\x2a\x08\xff\0\0\0\0\x71\xa2\xef\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\
\xa1\xee\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\0\xff\0\0\0\0\x71\xa2\xb3\xff\
\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xb2\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\
\x2a\xf0\xfe\0\0\0\0\x71\xa2\xdf\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xde\
\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x10\xff\0\0\0\0\x71\xa2\xd7\xff\0\0\0\
\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xd6\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\
\xd8\xfe\0\0\0\0\x71\xa2\xcf\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xce\xff\
\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xc0\xfe\0\0\0\0\x71\xa2\xc3\xff\0\0\0\0\
\x67\x02\0\0\x08\0\0\0\x71\xa1\xc2\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xe8\
\xfe\0\0\0\0\x71\xa2\xbf\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xbe\xff\0\0\
\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x98\xfe\0\0\0\0\x71\xa2\xbb\xff\0\0\0\0\x67\
\x02\0\0\x08\0\0\0\x71\xa1\xba\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xc8\xfe\
\0\0\0\0\x71\xa2\xb7\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xb6\xff\0\0\0\0\
\x4f\x12\0\0\0\0\0\0\x7b\x2a\x80\xfe\0\0\0\0\x71\xa2\xe3\xff\0\0\0\0\x67\x02\0\
\0\x08\0\0\0\x71\xa1\xe2\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xe0\xfe\0\0\0\
\0\x71\xa2\xdb\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xda\xff\0\0\0\0\x4f\
\x12\0\0\0\0\0\0\x7b\x2a\xd0\xfe\0\0\0\0\x71\xa2\xd3\xff\0\0\0\0\x67\x02\0\0\
\x08\0\0\0\x71\xa1\xd2\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xb8\xfe\0\0\0\0\
\x71\xa2\xcb\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xca\xff\0\0\0\0\x4f\x12\
\0\0\0\0\0\0\x7b\x2a\xb0\xfe\0\0\0\0\x71\xa2\xab\xff\0\0\0\0\x67\x02\0\0\x08\0\
\0\0\x71\xa1\xaa\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x90\xfe\0\0\0\0\x71\
\xa2\xa3\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xa2\xff\0\0\0\0\x4f\x12\0\0\
\0\0\0\0\x7b\x2a\x88\xfe\0\0\0\0\x71\xa2\xf3\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\
\x71\xa1\xf2\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x78\xfe\0\0\0\0\x71\xa2\
\xeb\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xea\xff\0\0\0\0\x4f\x12\0\0\0\0\
\0\0\x7b\x2a\x68\xfe\0\0\0\0\x71\xa2\xa9\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\
\xa1\xa8\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x70\xfe\0\0\0\0\x71\xa2\xa1\
\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xa0\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\
\x7b\x2a\x60\xfe\0\0\0\0\x71\xa2\xf1\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\
\xf0\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x58\xfe\0\0\0\0\x71\xa2\xe9\xff\0\
\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xe8\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\
\x2a\x50\xfe\0\0\0\0\x71\xa2\xe1\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xe0\
\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x48\xfe\0\0\0\0\x71\xa2\xd9\xff\0\0\0\
\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xd8\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\
\x40\xfe\0\0\0\0\x71\xa2\xd1\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xd0\xff\
\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x38\xfe\0\0\0\0\x71\xa2\xc9\xff\0\0\0\0\
\x67\x02\0\0\x08\0\0\0\x71\xa1\xc8\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x30\
\xfe\0\0\0\0\x71\xa2\xc1\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xc0\xff\0\0\
\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x28\xfe\0\0\0\0\x71\xa2\xbd\xff\0\0\0\0\x67\
\x02\0\0\x08\0\0\0\x71\xa1\xbc\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x20\xfe\
\0\0\0\0\x71\xa2\xb9\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xb8\xff\0\0\0\0\
\x4f\x12\0\0\0\0\0\0\x7b\x2a\x18\xfe\0\0\0\0\x71\xa2\xb5\xff\0\0\0\0\x67\x02\0\
\0\x08\0\0\0\x71\xa1\xb4\xff\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\x10\xfe\0\0\0\
\0\x71\xa2\xb1\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa1\xb0\xff\0\0\0\0\x4f\
\x12\0\0\0\0\0\0\x7b\x2a\x08\xfe\0\0\0\0\x71\xa8\xdd\xff\0\0\0\0\x67\x08\0\0\
\x08\0\0\0\x71\xa1\xdc\xff\0\0\0\0\x4f\x18\0\0\0\0\0\0\x71\xa7\xd5\xff\0\0\0\0\
\x67\x07\0\0\x08\0\0\0\x71\xa1\xd4\xff\0\0\0\0\x4f\x17\0\0\0\0\0\0\x71\xa6\xcd\
\xff\0\0\0\0\x67\x06\0\0\x08\0\0\0\x71\xa1\xcc\xff\0\0\0\0\x4f\x16\0\0\0\0\0\0\
\x71\xa0\xc5\xff\0\0\0\0\x67\0\0\0\x08\0\0\0\x71\xa1\xc4\xff\0\0\0\0\x4f\x10\0\
\0\0\0\0\0\x71\xa4\xa5\xff\0\0\0\0\x67\x04\0\0\x08\0\0\0\x71\xa1\xa4\xff\0\0\0\
\0\x4f\x14\0\0\0\0\0\0\x71\xa3\xf5\xff\0\0\0\0\x67\x03\0\0\x08\0\0\0\x71\xa1\
\xf4\xff\0\0\0\0\x4f\x13\0\0\0\0\0\0\x71\xa2\xed\xff\0\0\0\0\x67\x02\0\0\x08\0\
\0\0\x71\xa5\xec\xff\0\0\0\0\x4f\x52\0\0\0\0\0\0\x71\xa1\xe5\xff\0\0\0\0\x67\
\x01\0\0\x08\0\0\0\x71\xa5\xe4\xff\0\0\0\0\x4f\x51\0\0\0\0\0\0\x71\xa5\xe7\xff\
\0\0\0\0\x67\x05\0\0\x08\0\0\0\x71\xa9\xe6\xff\0\0\0\0\x4f\x95\0\0\0\0\0\0\x67\
\x05\0\0\x10\0\0\0\x4f\x15\0\0\0\0\0\0\x79\xa1\0\xff\0\0\0\0\x67\x01\0\0\x10\0\
\0\0\x4f\x21\0\0\0\0\0\0\x7b\x1a\0\xff\0\0\0\0\x79\xa1\x08\xff\0\0\0\0\x67\x01\
\0\0\x10\0\0\0\x4f\x31\0\0\0\0\0\0\x7b\x1a\x08\xff\0\0\0\0\x79\xa1\x18\xff\0\0\
\0\0\x67\x01\0\0\x10\0\0\0\x4f\x41\0\0\0\0\0\0\x7b\x1a\x18\xff\0\0\0\0\x79\xa1\
\xf8\xfe\0\0\0\0\x67\x01\0\0\x10\0\0\0\x4f\x01\0\0\0\0\0\0\x7b\x1a\xf8\xfe\0\0\
\0\0\x79\xa1\xc0\xfe\0\0\0\0\x67\x01\0\0\x10\0\0\0\x4f\x61\0\0\0\0\0\0\x7b\x1a\
\xc0\xfe\0\0\0\0\x79\xa1\xd8\xfe\0\0\0\0\x67\x01\0\0\x10\0\0\0\x4f\x71\0\0\0\0\
\0\0\x7b\x1a\xd8\xfe\0\0\0\0\x79\xa1\x10\xff\0\0\0\0\x67\x01\0\0\x10\0\0\0\x4f\
\x81\0\0\0\0\0\0\x7b\x1a\x10\xff\0\0\0\0\x79\xa1\xf0\xfe\0\0\0\0\x67\x01\0\0\
\x10\0\0\0\x79\xa2\x08\xfe\0\0\0\0\x4f\x21\0\0\0\0\0\0\x7b\x1a\xf0\xfe\0\0\0\0\
\x79\xa9\x80\xfe\0\0\0\0\x67\x09\0\0\x10\0\0\0\x79\xa1\x10\xfe\0\0\0\0\x4f\x19\
\0\0\0\0\0\0\x79\xa1\xc8\xfe\0\0\0\0\x67\x01\0\0\x10\0\0\0\x79\xa2\x18\xfe\0\0\
\0\0\x4f\x21\0\0\0\0\0\0\x7b\x1a\xc8\xfe\0\0\0\0\x79\xa0\x98\xfe\0\0\0\0\x67\0\
\0\0\x10\0\0\0\x79\xa1\x20\xfe\0\0\0\0\x4f\x10\0\0\0\0\0\0\x79\xa2\xe8\xfe\0\0\
\0\0\x67\x02\0\0\x10\0\0\0\x79\xa1\x28\xfe\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\
\xe8\xfe\0\0\0\0\x79\xa1\xb0\xfe\0\0\0\0\x67\x01\0\0\x10\0\0\0\x79\xa2\x30\xfe\
\0\0\0\0\x4f\x21\0\0\0\0\0\0\x7b\x1a\xb0\xfe\0\0\0\0\x79\xa1\xb8\xfe\0\0\0\0\
\x67\x01\0\0\x10\0\0\0\x79\xa2\x38\xfe\0\0\0\0\x4f\x21\0\0\0\0\0\0\x7b\x1a\xb8\
\xfe\0\0\0\0\x79\xa2\xd0\xfe\0\0\0\0\x67\x02\0\0\x10\0\0\0\x79\xa1\x40\xfe\0\0\
\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xd0\xfe\0\0\0\0\x79\xa2\xe0\xfe\0\0\0\0\x67\
\x02\0\0\x10\0\0\0\x79\xa1\x48\xfe\0\0\0\0\x4f\x12\0\0\0\0\0\0\x7b\x2a\xe0\xfe\
\0\0\0\0\x79\xa8\x68\xfe\0\0\0\0\x67\x08\0\0\x10\0\0\0\x79\xa1\x50\xfe\0\0\0\0\
\x4f\x18\0\0\0\0\0\0\x79\xa7\x78\xfe\0\0\0\0\x67\x07\0\0\x10\0\0\0\x79\xa1\x58\
\xfe\0\0\0\0\x4f\x17\0\0\0\0\0\0\x79\xa4\x88\xfe\0\0\0\0\x67\x04\0\0\x10\0\0\0\
\x79\xa1\x60\xfe\0\0\0\0\x4f\x14\0\0\0\0\0\0\x79\xa1\x90\xfe\0\0\0\0\x67\x01\0\
\0\x10\0\0\0\x79\xa2\x70\xfe\0\0\0\0\x4f\x21\0\0\0\0\0\0\xbf\x16\0\0\0\0\0\0\
\x71\xa1\xad\xff\0\0\0\0\x67\x01\0\0\x08\0\0\0\x71\xa2\xac\xff\0\0\0\0\x4f\x21\
\0\0\0\0\0\0\x71\xa2\xaf\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa3\xae\xff\0\0\
\0\0\x4f\x32\0\0\0\0\0\0\x67\x02\0\0\x10\0\0\0\x4f\x12\0\0\0\0\0\0\x67\x02\0\0\
\x20\0\0\0\x4f\x62\0\0\0\0\0\0\x79\xa1\x18\xff\0\0\0\0\x67\x01\0\0\x20\0\0\0\
\x4f\x41\0\0\0\0\0\0\x7b\x1a\x18\xff\0\0\0\0\x79\xa1\x08\xff\0\0\0\0\x67\x01\0\
\0\x20\0\0\0\x4f\x71\0\0\0\0\0\0\x7b\x1a\x08\xff\0\0\0\0\x79\xa1\0\xff\0\0\0\0\
\x67\x01\0\0\x20\0\0\0\x4f\x81\0\0\0\0\0\0\x7b\x1a\0\xff\0\0\0\0\x67\x05\0\0\
\x20\0\0\0\x79\xa1\xe0\xfe\0\0\0\0\x4f\x15\0\0\0\0\0\0\x79\xa3\x10\xff\0\0\0\0\
\x67\x03\0\0\x20\0\0\0\x79\xa1\xd0\xfe\0\0\0\0\x4f\x13\0\0\0\0\0\0\x7b\x3a\x10\
\xff\0\0\0\0\x79\xa8\xd8\xfe\0\0\0\0\x67\x08\0\0\x20\0\0\0\x79\xa1\xb8\xfe\0\0\
\0\0\x4f\x18\0\0\0\0\0\0\x79\xa7\xc0\xfe\0\0\0\0\x67\x07\0\0\x20\0\0\0\x79\xa1\
\xb0\xfe\0\0\0\0\x4f\x17\0\0\0\0\0\0\x79\xa6\xf8\xfe\0\0\0\0\x67\x06\0\0\x20\0\
\0\0\x79\xa1\xe8\xfe\0\0\0\0\x4f\x16\0\0\0\0\0\0\x67\0\0\0\x20\0\0\0\x79\xa1\
\xc8\xfe\0\0\0\0\x4f\x10\0\0\0\0\0\0\x67\x09\0\0\x20\0\0\0\x79\xa1\xf0\xfe\0\0\
\0\0\x4f\x19\0\0\0\0\0\0\x71\xa3\xf9\xff\0\0\0\0\x67\x03\0\0\x08\0\0\0\x71\xa1\
\xf8\xff\0\0\0\0\x4f\x13\0\0\0\0\0\0\x71\xa1\xfb\xff\0\0\0\0\x67\x01\0\0\x08\0\
\0\0\x71\xa4\xfa\xff\0\0\0\0\x4f\x41\0\0\0\0\0\0\x79\xa4\x18\xff\0\0\0\0\x7b\
\x4a\x40\xff\0\0\0\0\x7b\x2a\x48\xff\0\0\0\0\x7b\x9a\x50\xff\0\0\0\0\x7b\x0a\
\x58\xff\0\0\0\0\x7b\x6a\x60\xff\0\0\0\0\x7b\x7a\x68\xff\0\0\0\0\x7b\x8a\x70\
\xff\0\0\0\0\x79\xa2\x10\xff\0\0\0\0\x7b\x2a\x78\xff\0\0\0\0\x7b\x5a\x80\xff\0\
\0\0\0\x79\xa2\0\xff\0\0\0\0\x7b\x2a\x88\xff\0\0\0\0\x79\xa2\x08\xff\0\0\0\0\
\x7b\x2a\x90\xff\0\0\0\0\x67\x01\0\0\x10\0\0\0\x4f\x31\0\0\0\0\0\0\x71\xa2\xfd\
\xff\0\0\0\0\x67\x02\0\0\x08\0\0\0\x71\xa3\xfc\xff\0\0\0\0\x4f\x32\0\0\0\0\0\0\
\x71\xa3\xff\xff\0\0\0\0\x67\x03\0\0\x08\0\0\0\x71\xa4\xfe\xff\0\0\0\0\x4f\x43\
\0\0\0\0\0\0\x67\x03\0\0\x10\0\0\0\x4f\x23\0\0\0\0\0\0\x67\x03\0\0\x20\0\0\0\
\x4f\x13\0\0\0\0\0\0\x7b\x3a\x98\xff\0\0\0\0\x79\xa1\xa0\xfe\0\0\0\0\x63\x1a\
\x38\xff\0\0\0\0\x63\x1a\x3c\xff\0\0\0\0\xbf\xa4\0\0\0\0\0\0\x07\x04\0\0\x38\
\xff\xff\xff\x79\xa1\xa8\xfe\0\0\0\0\x18\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\
\x03\0\0\xff\xff\xff\xff\0\0\0\0\0\0\0\0\xb7\x05\0\0\x68\0\0\0\x85\0\0\0\x19\0\
\0\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x49\x44\x20\x25\x64\x20\x28\x25\x73\x29\
\x20\x72\x65\x61\x64\x3a\x20\x25\x73\x20\0\0\0\x20\x0d\0\0\0\0\0\0\x01\0\0\0\
\x05\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x30\x02\0\0\x30\x02\0\0\xef\x02\0\0\
\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\
\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x04\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\
\x20\0\0\0\0\0\0\0\x03\0\0\x04\x18\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\
\x01\0\0\0\x40\0\0\0\x27\0\0\0\x01\0\0\0\x80\0\0\0\x32\0\0\0\0\0\0\x0e\x05\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x08\0\0\0\x39\0\0\0\x15\0\0\x04\xa8\0\0\0\x41\0\
\0\0\x09\0\0\0\0\0\0\0\x45\0\0\0\x09\0\0\0\x40\0\0\0\x49\0\0\0\x09\0\0\0\x80\0\
\0\0\x4d\0\0\0\x09\0\0\0\xc0\0\0\0\x51\0\0\0\x09\0\0\0\0\x01\0\0\x54\0\0\0\x09\
\0\0\0\x40\x01\0\0\x57\0\0\0\x09\0\0\0\x80\x01\0\0\x5b\0\0\0\x09\0\0\0\xc0\x01\
\0\0\x5f\0\0\0\x09\0\0\0\0\x02\0\0\x62\0\0\0\x09\0\0\0\x40\x02\0\0\x65\0\0\0\
\x09\0\0\0\x80\x02\0\0\x68\0\0\0\x09\0\0\0\xc0\x02\0\0\x6b\0\0\0\x09\0\0\0\0\
\x03\0\0\x6e\0\0\0\x09\0\0\0\x40\x03\0\0\x71\0\0\0\x09\0\0\0\x80\x03\0\0\x74\0\
\0\0\x09\0\0\0\xc0\x03\0\0\x7c\0\0\0\x09\0\0\0\0\x04\0\0\x7f\0\0\0\x09\0\0\0\
\x40\x04\0\0\x82\0\0\0\x09\0\0\0\x80\x04\0\0\x88\0\0\0\x09\0\0\0\xc0\x04\0\0\
\x8b\0\0\0\x09\0\0\0\0\x05\0\0\x8e\0\0\0\0\0\0\x01\x08\0\0\0\x40\0\0\0\0\0\0\0\
\x01\0\0\x0d\x02\0\0\0\x9c\0\0\0\x07\0\0\0\xa0\0\0\0\x01\0\0\x0c\x0a\0\0\0\xa9\
\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x0c\0\0\0\x04\
\0\0\0\x04\0\0\0\xae\0\0\0\0\0\0\x0e\x0d\0\0\0\x01\0\0\0\xc4\x02\0\0\x01\0\0\
\x0f\x04\0\0\0\x0e\0\0\0\0\0\0\0\x04\0\0\0\xcc\x02\0\0\x01\0\0\x0f\x18\0\0\0\
\x06\0\0\0\0\0\0\0\x18\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\
\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6b\x65\x79\
\x5f\x73\x69\x7a\x65\0\x76\x61\x6c\x75\x65\x5f\x73\x69\x7a\x65\0\x65\x76\x65\
\x6e\x74\x73\0\x70\x74\x5f\x72\x65\x67\x73\0\x72\x31\x35\0\x72\x31\x34\0\x72\
\x31\x33\0\x72\x31\x32\0\x62\x70\0\x62\x78\0\x72\x31\x31\0\x72\x31\x30\0\x72\
\x39\0\x72\x38\0\x61\x78\0\x63\x78\0\x64\x78\0\x73\x69\0\x64\x69\0\x6f\x72\x69\
\x67\x5f\x61\x78\0\x69\x70\0\x63\x73\0\x66\x6c\x61\x67\x73\0\x73\x70\0\x73\x73\
\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x63\x74\x78\0\x70\x72\
\x69\x6e\x74\x72\x65\x74\0\x63\x68\x61\x72\0\x4c\x49\x43\x45\x4e\x53\x45\0\x2f\
\x68\x6f\x6d\x65\x2f\x77\x6d\x6b\x2f\x62\x70\x66\x2d\x64\x65\x76\x65\x6c\x6f\
\x70\x65\x72\x2d\x74\x75\x74\x6f\x72\x69\x61\x6c\x2f\x73\x72\x63\x2f\x73\x73\
\x68\x63\x6d\x64\x6c\x69\x6e\x65\x2f\x73\x73\x68\x63\x6d\x64\x6c\x69\x6e\x65\
\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\x20\x42\x50\x46\x5f\x4b\x52\x45\x54\x50\
\x52\x4f\x42\x45\x28\x70\x72\x69\x6e\x74\x72\x65\x74\x2c\x20\x63\x6f\x6e\x73\
\x74\x20\x76\x6f\x69\x64\x20\x2a\x72\x65\x74\x29\0\x09\x69\x66\x20\x28\x21\x72\
\x65\x74\x29\0\x09\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\
\x5f\x63\x6f\x6d\x6d\x28\x26\x63\x6f\x6d\x6d\x2c\x20\x73\x69\x7a\x65\x6f\x66\
\x28\x63\x6f\x6d\x6d\x29\x29\x3b\0\x09\x70\x69\x64\x20\x3d\x20\x62\x70\x66\x5f\
\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\
\x64\x28\x29\x20\x3e\x3e\x20\x33\x32\x3b\0\x09\x62\x70\x66\x5f\x70\x72\x6f\x62\
\x65\x5f\x72\x65\x61\x64\x5f\x75\x73\x65\x72\x5f\x73\x74\x72\x28\x73\x74\x72\
\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x73\x74\x72\x29\x2c\x20\x72\x65\x74\x29\
\x3b\0\x09\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\x22\x50\x49\x44\x20\x25\
\x64\x20\x28\x25\x73\x29\x20\x72\x65\x61\x64\x3a\x20\x25\x73\x20\x22\x2c\x20\
\x70\x69\x64\x2c\x20\x63\x6f\x6d\x6d\x2c\x20\x73\x74\x72\x29\x3b\0\x20\x20\x20\
\x20\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x5f\x6d\x65\x6d\x63\x70\x79\x28\x26\
\x65\x76\x65\x6e\x74\x2e\x63\x6d\x64\x2c\x20\x73\x74\x72\x2c\x09\x4d\x41\x58\
\x5f\x4c\x49\x4e\x45\x5f\x53\x49\x5a\x45\x29\x3b\0\x20\x20\x20\x20\x5f\x5f\x62\
\x75\x69\x6c\x74\x69\x6e\x5f\x6d\x65\x6d\x63\x70\x79\x28\x26\x65\x76\x65\x6e\
\x74\x2e\x63\x6f\x6d\x6d\x2c\x20\x63\x6f\x6d\x6d\x2c\x54\x41\x53\x4b\x5f\x43\
\x4f\x4d\x4d\x5f\x4c\x45\x4e\x29\x3b\0\x20\x20\x20\x20\x65\x76\x65\x6e\x74\x2e\
\x70\x70\x69\x64\x20\x3d\x20\x70\x69\x64\x3b\0\x20\x20\x20\x20\x65\x76\x65\x6e\
\x74\x2e\x70\x69\x64\x20\x20\x3d\x20\x70\x69\x64\x3b\0\x20\x20\x20\x20\x62\x70\
\x66\x5f\x70\x65\x72\x66\x5f\x65\x76\x65\x6e\x74\x5f\x6f\x75\x74\x70\x75\x74\
\x28\x63\x74\x78\x2c\x20\x26\x65\x76\x65\x6e\x74\x73\x2c\x20\x42\x50\x46\x5f\
\x46\x5f\x43\x55\x52\x52\x45\x4e\x54\x5f\x43\x50\x55\x2c\0\x30\x3a\x31\x30\0\
\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x6d\x61\x70\x73\0\x75\x72\x65\x74\x70\x72\
\x6f\x62\x65\x2f\x2f\x62\x69\x6e\x2f\x62\x61\x73\x68\x3a\x72\x65\x61\x64\x6c\
\x69\x6e\x65\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\xec\x01\0\
\0\0\x02\0\0\x1c\0\0\0\x08\0\0\0\xd2\x02\0\0\x01\0\0\0\0\0\0\0\x0b\0\0\0\x10\0\
\0\0\xd2\x02\0\0\x1e\0\0\0\0\0\0\0\xb6\0\0\0\xf7\0\0\0\x05\x78\0\0\x08\0\0\0\
\xb6\0\0\0\x24\x01\0\0\x06\x98\0\0\x18\0\0\0\xb6\0\0\0\x2f\x01\0\0\x02\xa4\0\0\
\x40\0\0\0\xb6\0\0\0\x5b\x01\0\0\x08\xac\0\0\x58\0\0\0\xb6\0\0\0\x2f\x01\0\0\
\x02\xa4\0\0\x60\0\0\0\xb6\0\0\0\x84\x01\0\0\x02\xb0\0\0\x88\0\0\0\xb6\0\0\0\
\xb5\x01\0\0\x02\xb8\0\0\xd0\0\0\0\xb6\0\0\0\x5b\x01\0\0\x23\xac\0\0\xe8\0\0\0\
\xb6\0\0\0\x2f\x01\0\0\x02\xa4\0\0\xf0\0\0\0\xb6\0\0\0\xb5\x01\0\0\x02\xb8\0\0\
\x18\x01\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\x40\x01\0\0\xb6\0\0\0\x21\x02\0\
\0\x05\xc0\0\0\x68\x01\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\x98\x03\0\0\xb6\0\
\0\0\x21\x02\0\0\x05\xc0\0\0\xe8\x03\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\x38\
\x04\0\0\xb6\0\0\0\x21\x02\0\0\x05\xc0\0\0\x88\x04\0\0\xb6\0\0\0\xeb\x01\0\0\
\x05\xc4\0\0\xc0\x06\0\0\xb6\0\0\0\x21\x02\0\0\x05\xc0\0\0\xe0\x06\0\0\xb6\0\0\
\0\xeb\x01\0\0\x05\xc4\0\0\xb8\x07\0\0\xb6\0\0\0\x21\x02\0\0\x05\xc0\0\0\xd8\
\x07\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\xf0\x09\0\0\xb6\0\0\0\x21\x02\0\0\
\x05\xc0\0\0\xb8\x0a\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\0\x0c\0\0\xb6\0\0\0\
\x21\x02\0\0\x05\xc0\0\0\x18\x0c\0\0\xb6\0\0\0\xeb\x01\0\0\x05\xc4\0\0\xf8\x0c\
\0\0\xb6\0\0\0\x58\x02\0\0\x10\xcc\0\0\0\x0d\0\0\xb6\0\0\0\x6e\x02\0\0\x10\xc8\
\0\0\x10\x0d\0\0\xb6\0\0\0\x2f\x01\0\0\x02\xa4\0\0\x18\x0d\0\0\xb6\0\0\0\x84\
\x02\0\0\x05\xd4\0\0\x50\x0d\0\0\xb6\0\0\0\xf7\0\0\0\x05\x78\0\0\x10\0\0\0\xd2\
\x02\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\xbf\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x03\0\0\0\x20\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xaa\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x09\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf0\0\
\0\0\0\0\0\0\xa8\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\0\
\0\0\0\x11\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x01\0\0\0\0\0\
\0\x60\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x2e\0\
\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\x0e\0\0\0\0\0\0\x04\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x36\0\0\0\x01\0\0\0\
\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\0\0\0\x18\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3c\0\0\0\x01\0\0\0\x32\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x18\x0f\0\0\0\0\0\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x7b\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x30\x0f\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x03\0\0\0\x08\0\0\0\0\0\
\0\0\x10\0\0\0\0\0\0\0\x9c\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\
\x0f\0\0\0\0\0\0\x37\x05\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\xa1\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\x14\0\0\0\0\0\
\0\x3c\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0";
}

#ifdef __cplusplus
struct sshcmdline_bpf *sshcmdline_bpf::open(const struct bpf_object_open_opts *opts) { return sshcmdline_bpf__open_opts(opts); }
struct sshcmdline_bpf *sshcmdline_bpf::open_and_load() { return sshcmdline_bpf__open_and_load(); }
int sshcmdline_bpf::load(struct sshcmdline_bpf *skel) { return sshcmdline_bpf__load(skel); }
int sshcmdline_bpf::attach(struct sshcmdline_bpf *skel) { return sshcmdline_bpf__attach(skel); }
void sshcmdline_bpf::detach(struct sshcmdline_bpf *skel) { sshcmdline_bpf__detach(skel); }
void sshcmdline_bpf::destroy(struct sshcmdline_bpf *skel) { sshcmdline_bpf__destroy(skel); }
const void *sshcmdline_bpf::elf_bytes(size_t *sz) { return sshcmdline_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
sshcmdline_bpf__assert(struct sshcmdline_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __SSHCMDLINE_BPF_SKEL_H__ */
